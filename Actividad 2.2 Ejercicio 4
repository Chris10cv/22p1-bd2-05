/*

*/

drop procedure IF EXISTS bd_sample.sp_procesar_factura;

DELIMITER //
create procedure bd_sample.sp_procesar_factura (
	in p_id_factura 		int,
    in p_fecha_emision		datetime,
    in p_id_subscriptor		int,
    in p_numero_items		int,
    in p_isv_total			decimal(12,2),
    in p_subtotal			decimal(12,2)
)

BEGIN

	declare v_id_factura 		int;
    declare v_fecha_emision		datetime;
    declare v_id_subscriptor	int;
    declare v_numero_items		int;
    declare v_isv_total			decimal(12,2);
    declare v_subtotal			decimal(12,2);
    declare v_totapagar			decimal(12,2);

	set v_id_factura 		=  	p_id_factura; 
    set v_fecha_emision		=	p_fecha_emision;
    set v_id_subscriptor	=	p_id_subscriptor;
    set v_numero_items		=	p_numero_items;
    set v_isv_total			=	p_isv_total;
    set v_subtotal			=	p_subtotal;
    set v_totapagar			=	p_totapagar;
    
	insert into bd_sample.sp_procesar_factura ( 
    id_factura, fecha_emision, id_subscriptor, numero_items,
    isv_total, subtotal, totapagar
    )values( 
    v_id_factura, v_fecha_emision, v_id_subscriptor, v_numero_items,
    v_isv_total, v_subtotal, v_totapagar
    );
    
#	3. Actualizar resumen de factura    
    select count(*) into @v_numero_items 
    from bd_sample.sp_procesar_factura
    where id_factura = @v_id_factura;
    
    select precio_venta into @v_precio_prod  
    from bd_sample.tbl_productos 
    where id_producto = @v_id_producto; 
    
    update bd_sample.sp_procesar_factura
		set numero_items = @v_numero_items,
			isv_total = (@v_precio_prod * @v_numero_items)*0.18, 
            subtotal  =  @v_precio_prod * @v_numero_items,
            totapagar = (@v_precio_prod * @v_numero_items)*1.18
		 where id_factura =  @v_id_factura;
    
COMMIT;
END;

select * from bd_sample.tbl_facturas
